@model DummyProject.Models.ViewModel.AdminDashboardStatsViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container-fluid admin-container">
    <div class="row g-0">
        <!-- Sidebar -->
        <div class="col-md-3 sidebar">
            <div class="sidebar-header">
                <h2><i class="fas fa-sliders-h"></i> Dashboard</h2>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/admin/admindashboard" class="active"><i class="fas fa-home"></i> Home</a></li>
                <li><a href="/admin/createproduct"><i class="fas fa-plus-circle"></i> Create Products</a></li>
                <li><a href="/admin/productlist"><i class="fas fa-list-ul"></i> Products List</a></li>
                <li><a href="/admin/orderlist"><i class="fas fa-clipboard-list"></i> Orders List</a></li>
                <li><a href="/admin/UserList"><i class="fas fa-user-friends"></i> Users List</a></li>
                <li><a href="/admin/settings"><i class="fas fa-cogs"></i> Settings</a></li>
            </ul>
            <div class="sidebar-footer">
                <div class="user-profile">
                    <img src="~/logo.jpg" alt="Admin" class="profile-img">
                    <div class="profile-info">
                        <span class="username">Admin User</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="col-md-9 main-content">
            <!-- Stats Cards -->
            <div class="row stats-row">
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="stat-icon" style="background-color: rgba(58, 134, 255, 0.2);">
                            <i class="fas fa-shopping-cart" style="color: var(--primary);"></i>
                        </div>
                        <div class="stat-info">
                            <h3 id="total-orders">@Model.TotalOrders</h3>
                            <p>Total Orders</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="stat-icon" style="background-color: rgba(40, 167, 69, 0.2);">
                            <i class="fas fa-dollar-sign" style="color: var(--success);"></i>
                        </div>
                        <div class="stat-info">
                            <h3 id="total-revenue">&#8377; @Model.TotalRevenue.ToString("N2")</h3>
                            <p>Total Revenue</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="stat-icon" style="background-color: rgba(255, 193, 7, 0.2);">
                            <i class="fas fa-users" style="color: #ffc107;"></i>
                        </div>
                        <div class="stat-info">
                            <h3 id="total-customers">@Model.TotalCustomers</h3>
                            <p>Customers</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card">
                        <div class="stat-icon" style="background-color: rgba(220, 53, 69, 0.2);">
                            <i class="fas fa-box-open" style="color: #dc3545;"></i>
                        </div>
                        <div class="stat-info">
                            <h3 id="low-stock">@Model.LowStockProducts</h3>
                            <p>Low Stock</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Chart Section: No gap, aligned with stats cards -->
            <div class="chart-card">
                <div class="card-header">
                    <h3><i class="fas fa-chart-line"></i> Sales Overview</h3>
                    <div class="time-filter">
                        <button class="btn-time active" data-period="week">Week</button>
                        <button class="btn-time" data-period="month">Month</button>
                        <button class="btn-time" data-period="year">Year</button>
                    </div>
                </div>
                <div class="card-body" style="height:350px;">
                    <canvas id="salesChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let chart;
    let currentPeriod = "week";

    async function fetchSalesData(period) {
        // Replace with your actual endpoint and logic
        const res = await fetch(`/admin/getsalesdata?period=${period}`);
        return await res.json();
    }

    function updateChart(chart, labels, data) {
        chart.data.labels = labels;
        chart.data.datasets[0].data = data;
        chart.update();
    }

    document.addEventListener("DOMContentLoaded", async function () {
        const ctx = document.getElementById('salesChart').getContext('2d');
        // Initial fetch
        const initialData = await fetchSalesData(currentPeriod);

        chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: initialData.labels,
                datasets: [{
                    label: 'Sales',
                    data: initialData.data,
                    borderColor: 'rgba(58, 134, 255, 1)',
                    backgroundColor: 'rgba(58, 134, 255, 0.1)',
                    borderWidth: 2,
                    pointBackgroundColor: 'rgba(58, 134, 255, 1)',
                    pointBorderColor: '#FFFFFF',
                    pointRadius: 5,
                    pointHoverRadius: 7,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        labels: {
                            color: 'var(--text)'
                        }
                    },
                    tooltip: {
                        backgroundColor: 'var(--bg-tertiary)',
                        titleColor: 'var(--text)',
                        bodyColor: 'var(--text-secondary)',
                        borderColor: 'var(--primary)',
                        borderWidth: 1
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'var(--border)'
                        },
                        ticks: {
                            color: 'var(--text-secondary)'
                        }
                    },
                    y: {
                        grid: {
                            color: 'var(--border)'
                        },
                        ticks: {
                            color: 'var(--text-secondary)'
                        }
                    }
                }
            }
        });

        document.querySelectorAll('.btn-time').forEach(btn => {
            btn.addEventListener('click', async function () {
                document.querySelectorAll('.btn-time').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                currentPeriod = this.getAttribute('data-period');
                const salesData = await fetchSalesData(currentPeriod);
                updateChart(chart, salesData.labels, salesData.data);
            });
        });
    });
</script>